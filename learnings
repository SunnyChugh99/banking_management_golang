 docker run --name postgres13 -p 5433:5433 -e POSTGRES_PASSWORD=secret -e POSTGRES_USER=root -d postgres:12-alpine


Golang database migration

migrate package in Golang

 migrate create -ext sql -dir db/migration -seq init_schema



sudo systemctl stop postgresql




docker run --name postgres17 -p 5433:5432 -e POSTGRES_PASSWORD=secret -e POSTGRES_USER=root -d postgres:12-alpine

-------------------------------------------------------------------------------------------------------------------------------------------------
Migration up:
-------------------------------------------------------------------------------------------------------------------------------------------------
migrate -path db/migration -database "postgres://root:secret@localhost:5433/simple_bank?sslmode=disable" -verbose up



DATABASE/sql
 - very fast and straightforward
 - manual mapping SQL fields to variables
 - Easy to make mistakes, not caught at runtime


GORM
 - CRUD operations already implemented, very short prod code
 - must learn how to write complex queries using gorm's functions
 - Run slowly on high traffic


 SQLX 
 - Quite fast & easy to use
 - Field mapping via query text & struct tags
 - Failure won't occur until runtime   

 SQLC
 - Very fast & easy to use
 - Automatic code generation
 - Catch SQL query errors before generating codes
 - Full support postgres, mysql is experimental


 TESTING FRAMEWORK

 TESTIFY package



 docker run --name bankmanagement -p 080 -e DBSOURCE="postgres://root:secret@172.17.0.2:5432/simple_bank?sslmode=disable" sunnydocker1209/bank_management:v1


AWS password:

RDS databae:

user-  root 

password - vOe5Go2oTKtBIFSE60I7
host - simple-bank.cfaqkm6kysnc.eu-west-1.rds.amazonaws.com


migrateup:

migrate -path db/migration -database "postgres://root:vOe5Go2oTKtBIFSE60I7@simple-bank.cfaqkm6kysnc.eu-west-1.rds.amazonaws.com:5432/simple_bank" -verbose up


TOKEN_SYMMETRIC_KEY d316cf2a654bc266c875c08212fcf8cc




aws ssm code:

// Use this code snippet in your app.
// If you need more information about configurations or implementing the sample code, visit the AWS docs:   
// https://aws.github.io/aws-sdk-go-v2/docs/getting-started/

import (
	"context"
	"log"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/config"
	"github.com/aws/aws-sdk-go-v2/service/secretsmanager"
)

func main() {
	secretName := "simple_bank"
	region := "eu-west-1"

	config, err := config.LoadDefaultConfig(context.TODO(), config.WithRegion(region))
	if err != nil {
		log.Fatal(err)
	}

	// Create Secrets Manager client
	svc := secretsmanager.NewFromConfig(config)

	input := &secretsmanager.GetSecretValueInput{
		SecretId:     aws.String(secretName),
		VersionStage: aws.String("AWSCURRENT"), // VersionStage defaults to AWSCURRENT if unspecified
	}

	result, err := svc.GetSecretValue(context.TODO(), input)
	if err != nil {
		// For a list of exceptions thrown, see
		// https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_GetSecretValue.html
		log.Fatal(err.Error())
	}

	// Decrypts secret using the associated KMS key.
	var secretString string = *result.SecretString

	// Your code goes here.
}


curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install



aws access_key_id - AKIAW3MECL3YPZUT6SGQ

secret_key : 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


SECRET ARN : arn:aws:secretsmanager:eu-west-1:471112769264:secret:simple_bank-V855WG


aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text
aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text


10683796@ltilbom20401298:~/Desktop/EVERYTHING/Learnings/SKILLS_LEARNINGS/banking_management_golang$ aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' 
DB_DRIVER=postgres
DB_SOURCE=postgres://root:vOe5Go2oTKtBIFSE60I7@simple-bank.cfaqkm6kysnc.eu-west-1.rds.amazonaws.com:5432/simple_bank
SERVER_ADDRESS=0.0.0.0:8080
TOKEN_SYMMETRIC_KEY=d316cf2a654bc266c875c08212fcf8cc
ACCESS_TOKEN_DURATION=15m
10683796@ltilbom20401298:~/Desktop/EVERYTHING/Learnings/SKILLS_LEARNINGS/banking_management_golang$ aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
